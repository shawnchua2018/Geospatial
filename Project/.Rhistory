plot(mrt)
mrt <- shapefile("data/geospatial/MRTLRTStnPtt.shp")
mrt <- st_as_sf(mrt, coords = c("XCOORD", "YCOORD"), crs=3414)
mrt <- st_transform(mrt,3414)
st_crs(mrt)
st_is_longlat(mrt)
plot(mrt$STN_NAME)
View(mrt)
mrt <- shapefile("data/geospatial/MRTLRTStnPtt.shp")
mrt <- st_as_sf(mrt, coords = c("XCOORD", "YCOORD"), crs=3414)
mrt <- st_transform(mrt,3414)
st_crs(mrt)
st_is_longlat(mrt)
new_mrt <- mrt %>%
select(STN_NO, geometry)
mrt <- shapefile("data/geospatial/MRTLRTStnPtt.shp")
#mrt <- st_as_sf(mrt, coords = c("XCOORD", "YCOORD"), crs=3414)
#mrt <- st_transform(mrt,3414)
#st_crs(mrt)
#st_is_longlat(mrt)
#plot(mrt$STN_NAME)
mrt <- shapefile("data/geospatial/MRTLRTStnPtt.shp")
mrt@data <- select(3:5)
mrt <- shapefile("data/geospatial/MRTLRTStnPtt.shp")
mrt@data <- mrt@data %>% select(3:5)
mrt <- shapefile("data/geospatial/MRTLRTStnPtt.shp")
mrt@data <- mrt@data %>% dplyr::select(3:5)
View(mrt)
mrt <- shapefile("data/geospatial/MRTLRTStnPtt.shp")
mrt@data <- mrt@data %>% dplyr::select(3)
#mrt <- st_as_sf(mrt, coords = c("XCOORD", "YCOORD"), crs=3414)
#mrt <- st_transform(mrt,3414)
#st_crs(mrt)
#st_is_longlat(mrt)
#plot(mrt$STN_NAME)
View(mrt)
mrt <- shapefile("data/geospatial/MRTLRTStnPtt.shp")
mrt@data <- mrt@data %>% dplyr::select(3)
mrt <- st_as_sf(mrt, coords = c("XCOORD", "YCOORD"), crs=3414)
mrt <- st_transform(mrt,3414)
st_crs(mrt)
st_is_longlat(mrt)
plot(mrt$STN_NAME)
mrt <- shapefile("data/geospatial/MRTLRTStnPtt.shp")
mrt@data <- mrt@data %>% dplyr::select(3)
mrt <- st_as_sf(mrt, coords = c("XCOORD", "YCOORD"), crs=3414)
mrt <- st_transform(mrt,3414)
st_crs(mrt)
st_is_longlat(mrt)
plot(mrt)
buffer_zone <- st_buffer(sf_resale_flat, 500)
sf_resale_flat$sf_hawkercenter <- lengths(st_intersects(buffer_zone, sf_hawkercenter))
buffer_zone <- st_buffer(sf_resale_flat, 500)
sf_resale_flat$mrt <- lengths(st_intersects(buffer_zone, mrt))
View(sf_resale_flat)
buffer_zone <- st_buffer(sf_resale_flat, 500)
sf_resale_flat$mrt <- lengths(st_intersects(buffer_zone, mrt))
sf_resale_flat$stn <- st_intersects(buffer_zone, mrt)
mrt <- shapefile("data/geospatial/MRTLRTStnPtt.shp")
mrt@data <- mrt@data %>% dplyr::select(2)
mrt <- st_as_sf(mrt, coords = c("XCOORD", "YCOORD"), crs=3414)
mrt <- st_transform(mrt,3414)
st_crs(mrt)
st_is_longlat(mrt)
plot(mrt)
buffer_zone <- st_buffer(sf_resale_flat, 500)
sf_resale_flat$mrt <- lengths(st_intersects(buffer_zone, mrt))
sf_resale_flat$stn <- st_intersects(buffer_zone, mrt)
mrt <- shapefile("data/geospatial/MRTLRTStnPtt.shp")
write.csv(mrt,"C:\Users\olivi\OneDrive\Desktop\SMUX Geospatial\Project\Geospatial\Project\data", row.names = FALSE)
mrt <- shapefile("data/geospatial/MRTLRTStnPtt.shp")
write.csv(mrt,"Project/data/mrt_new.csv", row.names = FALSE)
mrt <- shapefile("data/geospatial/MRTLRTStnPtt.shp")
write.csv(mrt,"data/aspatial/MRT_new.csv", row.names = FALSE)
#mrt@data <- mrt@data %>%
#filter(%>%
#dplyr::select(2)
#mrt <- st_as_sf(mrt, coords = c("XCOORD", "YCOORD"), crs=3414)
#mrt <- st_transform(mrt,3414)
#st_crs(mrt)
#st_is_longlat(mrt)
#plot(mrt)
#mrt <- shapefile("data/geospatial/MRTLRTStnPtt.shp")
#write.csv(mrt,"data/aspatial/MRT_new.csv", row.names = FALSE)
mrt = st_read("data/aspatial/Resale_flats_compiled.csv")
mrt <- st_as_sf(mrt, coords = c("XCOORD", "YCOORD"), crs=3414)
View(mrt)
#mrt <- shapefile("data/geospatial/MRTLRTStnPtt.shp")
#write.csv(mrt,"data/aspatial/MRT_new.csv", row.names = FALSE)
mrt = st_read("data/aspatial/mrt_new.csv")
mrt <- st_as_sf(mrt, coords = c("XCOORD", "YCOORD"), crs=3414)
View(mrt)
#mrt <- shapefile("data/geospatial/MRTLRTStnPtt.shp")
#write.csv(mrt,"data/aspatial/MRT_new.csv", row.names = FALSE)
mrt = st_read("data/aspatial/mrt_new.csv")
mrt <- st_as_sf(mrt, coords = c("coords.x1", "coords.x2"), crs=3414)
mrt <- st_transform(mrt,3414)
st_crs(mrt)
st_is_longlat(mrt)
plot(mrt)
#mrt <- shapefile("data/geospatial/MRTLRTStnPtt.shp")
#write.csv(mrt,"data/aspatial/MRT_new.csv", row.names = FALSE)
mrt = st_read("data/aspatial/mrt_new.csv")
mrt <- st_as_sf(mrt, coords = c("coords.x1", "coords.x2"), crs=3414)
mrt <- st_transform(mrt,3414)
st_crs(mrt)
st_is_longlat(mrt)
plot(mrt)
buffer_zone <- st_buffer(sf_resale_flat, 500)
sf_resale_flat$mrt <- lengths(st_intersects(buffer_zone, mrt))
#sf_resale_flat$stn <- st_intersects(buffer_zone, mrt)
View(sf_resale_flat)
resale_flat = st_read("data/aspatial/Resale_flats_compiled.csv")
resale_flat$latitude <- as.numeric(resale_flat$latitude)
resale_flat$longitude <- as.numeric(resale_flat$longitude)
cord.dec = SpatialPoints(cbind(resale_flat$longitude, resale_flat$latitude), proj4string=CRS("+proj=longlat"))
cord.UTM <- spTransform(cord.dec, CRS("+init=epsg:3414"))
cord.UTM
new_coords <- data.frame(cord.UTM@coords)
summary(new_coords)
new_coords <- new_coords %>%
rename(X = coords.x1, Y = coords.x2)
resale_flat <- cbind(resale_flat, "X" = new_coords[1], "Y" = new_coords[2])
resale_flat = resale_flat[,!(names(resale_flat) %in% c("month","flat_model","lease_commence_date","longitude","latitude"))]
sf_resale_flat <- st_as_sf(resale_flat, coords = c("X","Y"),crs= 3414)
buffer_zone <- st_buffer(sf_resale_flat, 500)
sf_resale_flat$mrt <- lengths(st_intersects(buffer_zone, mrt))
#sf_resale_flat$stn <- st_intersects(buffer_zone, mrt)
buffer_zone <- st_buffer(sf_resale_flat, 500)
sf_resale_flat$mrt <- lengths(st_intersects(buffer_zone, mrt))
sf_resale_flat$stn <- st_intersects(buffer_zone, mrt)
buffer_zone <- st_buffer(sf_resale_flat, 500)
sf_resale_flat$mrt <- lengths(st_intersects(buffer_zone, mrt))
sf_resale_flat$stn <- st_intersects(buffer_zone, mrt)
sf_resale_flat <- sf_resale_flat %>%
filter(mrt == 3)
shiny::runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
shiny::runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
shiny::runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp()
runApp('Spatial')
runApp()
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
packages = c('sp', 'rgdal', 'rgeos', 'sf', 'tidyverse', 'olsrr', 'corrplot', 'ggpubr', 'sf', 'spdep', 'GWmodel', 'tmap', 'tidyverse', 'raster')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
packages = c('sp', 'rgdal', 'rgeos', 'sf', 'tidyverse', 'olsrr', 'corrplot', 'ggpubr', 'sf', 'spdep', 'GWmodel', 'tmap', 'tidyverse', 'raster')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
resale_flat = st_read("data/aspatial/Resale_flats_compiled.csv")
resale_flat$latitude <- as.numeric(resale_flat$latitude)
resale_flat$longitude <- as.numeric(resale_flat$longitude)
cord.dec = SpatialPoints(cbind(resale_flat$longitude, resale_flat$latitude), proj4string=CRS("+proj=longlat"))
cord.UTM <- spTransform(cord.dec, CRS("+init=epsg:3414"))
cord.UTM
new_coords <- data.frame(cord.UTM@coords)
summary(new_coords)
new_coords <- new_coords %>%
rename(X = coords.x1, Y = coords.x2)
resale_flat <- cbind(resale_flat, "X" = new_coords[1], "Y" = new_coords[2])
resale_flat = resale_flat[,!(names(resale_flat) %in% c("month","flat_model","lease_commence_date","longitude","latitude"))]
sf_resale_flat <- st_as_sf(resale_flat, coords = c("X","Y"),crs= 3414)
#school = st_read("data/aspatial/Schools.csv")
#school$latitude <- as.numeric(school$latitude)
#school$longitude <- as.numeric(school$longitude)
#cord.dec.sch = SpatialPoints(cbind(school$longitude, school$latitude), #proj4string=CRS("+proj=longlat"))
#cord.UTM.sch <- spTransform(cord.dec.sch, CRS("+init=epsg:3414"))
#cord.UTM.sch
#new_coords_sch <- data.frame(cord.UTM.sch@coords)
#summary(new_coords_sch)
#new_coords_sch <- new_coords_sch %>%
#  rename(X = coords.x1, Y = coords.x2)
#school <- cbind(school, "X" = new_coords_sch[1], "Y" = new_coords_sch[2])
#sf_school <- st_as_sf(school, coords = c("X","Y"),crs= 3414)
#Pri school
pschool = st_read("data/aspatial/Primary_school.csv")
pschool$latitude <- as.numeric(pschool$latitude)
pschool$longitude <- as.numeric(pschool$longitude)
cord.dec.psch = SpatialPoints(cbind(pschool$longitude, pschool$latitude), proj4string=CRS("+proj=longlat"))
cord.UTM.psch <- spTransform(cord.dec.psch, CRS("+init=epsg:3414"))
cord.UTM.psch
new_coords_psch <- data.frame(cord.UTM.psch@coords)
summary(new_coords_psch)
new_coords_psch <- new_coords_psch %>%
rename(X = coords.x1, Y = coords.x2)
pschool <- cbind(pschool, "X" = new_coords_psch[1], "Y" = new_coords_psch[2])
sf_pschool <- st_as_sf(pschool, coords = c("X","Y"),crs= 3414)
#sec school
sschool = st_read("data/aspatial/Secondary_school.csv")
sschool$latitude <- as.numeric(sschool$latitude)
sschool$longitude <- as.numeric(sschool$longitude)
cord.dec.ssch = SpatialPoints(cbind(sschool$longitude, sschool$latitude), proj4string=CRS("+proj=longlat"))
cord.UTM.ssch <- spTransform(cord.dec.ssch, CRS("+init=epsg:3414"))
cord.UTM.ssch
new_coords_ssch <- data.frame(cord.UTM.ssch@coords)
summary(new_coords_ssch)
new_coords_ssch <- new_coords_ssch %>%
rename(X = coords.x1, Y = coords.x2)
sschool <- cbind(sschool, "X" = new_coords_ssch[1], "Y" = new_coords_ssch[2])
sf_sschool <- st_as_sf(sschool, coords = c("X","Y"),crs= 3414)
mall = st_read("data/aspatial/Shopping_Malls.csv")
mall$latitude <- as.numeric(mall$latitude)
mall$longitude <- as.numeric(mall$longitude)
cord.dec.mall = SpatialPoints(cbind(mall$longitude, mall$latitude), proj4string=CRS("+proj=longlat"))
cord.UTM.mall <- spTransform(cord.dec.mall, CRS("+init=epsg:3414"))
cord.UTM.mall
new_coords_mall <- data.frame(cord.UTM.mall@coords)
summary(new_coords_mall)
new_coords_mall <- new_coords_mall %>%
rename(X = coords.x1, Y = coords.x2)
mall <- cbind(mall, "X" = new_coords_mall[1], "Y" = new_coords_mall[2])
sf_mall <- st_as_sf(mall, coords = c("X","Y"),crs= 3414)
st_transform(sf_mall, 3414)
st_crs(sf_mall)
preschool = st_read("data/geospatial/pre-schools-location-kml.kml")
hawkercenter = st_read("data/geospatial/hawker-centres-kml.kml")
cc = st_read("data/geospatial/community-clubs-kml.kml")
parks = st_read("data/geospatial/nparks-parks-kml.kml")
parks = st_centroid(parks)
supermarket = st_read("data/geospatial/supermarkets-kml.kml")
sport_facilities = st_read("data/geospatial/sportsg-sport-facilities-kml.kml")
sport_facilities = st_centroid(sport_facilities)
sf_mpsz2019 = st_read("data/geospatial/master-plan-2019-subzone-boundary-no-sea-kml.kml")
cc <- cc %>%
st_cast("MULTIPOINT") %>%
st_cast("POINT")
cc_coords <- data.frame(st_coordinates(cc))
cord.dec.cc = SpatialPoints(cbind(cc_coords$X, cc_coords$Y), proj4string=CRS("+proj=longlat"))
cord.UTM.cc <- spTransform(cord.dec.cc, CRS("+init=epsg:3414"))
new_cc <- data.frame(cord.UTM.cc)
new_cc <- new_cc %>%
rename(X = coords.x1, Y = coords.x2)
parks <- parks %>%
st_cast("MULTIPOINT") %>%
st_cast("POINT")
parks_coords <- data.frame(st_coordinates(parks))
cord.dec.parks = SpatialPoints(cbind(parks_coords$X, parks_coords$Y), proj4string=CRS("+proj=longlat"))
cord.UTM.parks <- spTransform(cord.dec.parks, CRS("+init=epsg:3414"))
new_parks <- data.frame(cord.UTM.parks)
new_parks <- new_parks %>%
rename(X = coords.x1, Y = coords.x2)
preschool <- preschool %>%
st_cast("MULTIPOINT") %>%
st_cast("POINT")
preschool_coords <- data.frame(st_coordinates(preschool))
cord.dec.preschool = SpatialPoints(cbind(preschool_coords$X, preschool_coords$Y), proj4string=CRS("+proj=longlat"))
cord.UTM.preschool <- spTransform(cord.dec.preschool, CRS("+init=epsg:3414"))
new_preschool <- data.frame(cord.UTM.preschool)
new_preschool <- new_preschool %>%
rename(X = coords.x1, Y = coords.x2)
sport_facilities <- sport_facilities %>%
st_cast("MULTIPOINT") %>%
st_cast("POINT")
sport_facilities_coords <- data.frame(st_coordinates(sport_facilities))
cord.dec.sport_facilities = SpatialPoints(cbind(sport_facilities_coords$X, sport_facilities_coords$Y), proj4string=CRS("+proj=longlat"))
cord.UTM.sport_facilities <- spTransform(cord.dec.sport_facilities, CRS("+init=epsg:3414"))
new_sport_facilities <- data.frame(cord.UTM.sport_facilities)
new_sport_facilities <- new_sport_facilities %>%
rename(X = coords.x1, Y = coords.x2)
supermarket <- supermarket %>%
st_cast("MULTIPOINT") %>%
st_cast("POINT")
supermarket_coords <- data.frame(st_coordinates(supermarket))
cord.dec.supermarket = SpatialPoints(cbind(supermarket_coords$X, supermarket_coords$Y), proj4string=CRS("+proj=longlat"))
cord.UTM.supermarket <- spTransform(cord.dec.supermarket, CRS("+init=epsg:3414"))
new_supermarket <- data.frame(cord.UTM.supermarket)
new_supermarket <- new_supermarket %>%
rename(X = coords.x1, Y = coords.x2)
hawkercenter <- hawkercenter %>%
st_cast("MULTIPOINT") %>%
st_cast("POINT")
hawkercenter_coords <- data.frame(st_coordinates(hawkercenter))
cord.dec.hawkercenter = SpatialPoints(cbind(hawkercenter_coords$X, hawkercenter_coords$Y), proj4string=CRS("+proj=longlat"))
cord.UTM.hawkercenter <- spTransform(cord.dec.hawkercenter, CRS("+init=epsg:3414"))
new_hawkercenter <- data.frame(cord.UTM.hawkercenter)
new_hawkercenter <- new_hawkercenter %>%
rename(X = coords.x1, Y = coords.x2)
#mrt <- shapefile("data/geospatial/MRTLRTStnPtt.shp")
#write.csv(mrt,"data/aspatial/MRT_new.csv", row.names = FALSE)
mrt = st_read("data/aspatial/mrt_new.csv")
mrt <- st_as_sf(mrt, coords = c("coords.x1", "coords.x2"), crs=3414)
mrt <- st_transform(mrt,3414)
st_crs(mrt)
st_is_longlat(mrt)
plot(mrt)
sf_parks <- st_as_sf(new_parks, coords = c("X","Y"),crs= 3414)
st_crs(sf_parks)
sf_hawkercenter <- st_as_sf(new_hawkercenter, coords = c("X","Y"),crs= 3414)
st_transform(sf_hawkercenter, 3414)
st_crs(sf_hawkercenter)
sf_preschool <- st_as_sf(new_preschool, coords = c("X","Y"),crs= 3414)
st_transform(sf_preschool, 3414)
st_crs(sf_preschool)
sf_sport_facilities <- st_as_sf(new_sport_facilities, coords = c("X","Y"),crs= 3414)
st_transform(sf_sport_facilities, 3414)
st_crs(sf_sport_facilities)
sf_cc <- st_as_sf(new_cc, coords = c("X","Y"),crs= 3414)
st_transform(sf_cc, 3414)
st_crs(sf_cc)
sf_supermarket <- st_as_sf(new_supermarket, coords = c("X","Y"),crs= 3414)
st_transform(sf_supermarket, 3414)
st_crs(sf_supermarket)
buffer_mrt <- st_buffer(sf_resale_flat, 500)
buffer_psch <- st_buffer(sf_resale_flat, 500)
buffer_ssch <- st_buffer(sf_resale_flat, 500)
buffer_cc <- st_buffer(sf_resale_flat, 500)
buffer_supermarket <- st_buffer(sf_resale_flat, 500)
buffer_sport <- st_buffer(sf_resale_flat, 500)
buffer_preschool <- st_buffer(sf_resale_flat, 500)
buffer_hawker <- st_buffer(sf_resale_flat, 500)
buffer_mall <- st_buffer(sf_resale_flat, 500)
sf_resale_flat <- sf_resale_flat %>%
mutate(mrt_count = lengths(st_intersects(buffer_mrt, mrt)))%>%
mutate(pri_school_count = lengths(st_intersects(buffer_psch, sf_pschool)))%>%
mutate(sec_school_count = lengths(st_intersects(buffer_ssch, sf_sschool)))%>%
mutate(community_center_count = lengths(st_intersects(buffer_cc, sf_cc)))%>%
mutate(supermarket_count = lengths(st_intersects(buffer_supermarket, sf_supermarket)))%>%
mutate(sport_count = lengths(st_intersects(buffer_sport, sf_sport_facilities)))%>%
mutate(preschool_count = lengths(st_intersects(buffer_preschool, sf_preschool)))%>%
mutate(hawker_count = lengths(st_intersects(buffer_hawker, sf_hawkercenter)))%>%
mutate(mall_count = lengths(st_intersects(buffer_mall, sf_mall)))
sf_resale_flat <- sf_resale_flat%>%
mutate(`resale_price`= as.numeric(`resale_price`))
ggplot(data = sf_resale_flat, aes(x=`resale_price`)) +
geom_histogram(bins=20, color="black", fill="light blue")
sf_resale_flat <- sf_resale_flat %>%
mutate(`log_resale_price` = log(`resale_price`))
ggplot(data = sf_resale_flat, aes(x=`log_resale_price`)) +
geom_histogram(bins=20, color="black", fill="light blue")
#NEED TO DO SAMPLING HERE
testtest <- as_Spatial(sf_resale_flat)
testtest <- testtest[sample(1:length(testtest),300),]
sf_resale_flat <- st_as_sf(testtest)
#Building a hedonic pricing model using multiple linear regression method
#resale_flat.mlr <- lm(formula = resale_price ~ remaining_lease_nearest_year + flat_type_code + mrt_count + pri_school_count + sec_school_count + community_center_count + supermarket_count + sport_count + preschool_count + hawker_count + mall_count, data=sf_resale_flat)
resale_flat.mlr <- lm(formula = resale_price ~ flat_type_code + mrt_count + pri_school_count + sec_school_count + community_center_count + supermarket_count + sport_count + preschool_count + hawker_count + mall_count, data=sf_resale_flat)
summary(resale_flat.mlr)
# remove sport count
#sf_resale_flat <- sf_resale_flat[-c(4540,9963), ]
resale_flat.mlr1 <- lm(formula = resale_price ~ flat_type_code + mrt_count + pri_school_count + sec_school_count + community_center_count + supermarket_count + sport_count + preschool_count + hawker_count + mall_count, data=sf_resale_flat)
ols_regress(resale_flat.mlr1)
mlr.output <- as.data.frame(resale_flat.mlr1$residuals)
sf_resale_flat.res <- cbind(sf_resale_flat, mlr.output$`resale_flat.mlr1$residuals`) %>%
rename(`MLR_RES` = `mlr.output..resale_flat.mlr1.residuals.`)
sp_resale_flat <- as_Spatial(sf_resale_flat.res)
#sp_resale_flat <- sp_resale_flat[-c(4540,9963), ]
#Sampling done here
#sp_resale_flat <- sp_resale_flat[sample(1:length(sp_resale_flat),300),]
sp_resale_flat
bw.fixed <- bw.gwr(formula = resale_price ~ flat_type_code + mrt_count + pri_school_count + sec_school_count + community_center_count + supermarket_count + preschool_count + hawker_count + mall_count, data=sp_resale_flat, approach="CV", kernel="gaussian", adaptive=FALSE, longlat=FALSE)
#bw.adaptive <- bw.gwr(formula = resale_price ~ floor_area_sqm + mrt_count + pri_school_count + sec_school_count + community_center_count + supermarket_count +preschool_count + hawker_count + mall_count, data = sp_resale_flat, approach="CV", kernel="gaussian", adaptive=TRUE, longlat=FALSE)
set.seed(0)
gwr.fixed <- gwr.basic(formula = resale_price ~ flat_type_code + mrt_count + pri_school_count + sec_school_count + community_center_count + supermarket_count + preschool_count + hawker_count + mall_count, data = sp_resale_flat, bw=bw.fixed, kernel = 'gaussian', longlat = FALSE)
gwr.fixed
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
buffer_mrt <- st_buffer(sf_resale_flat, 0)
buffer_psch <- st_buffer(sf_resale_flat, 0)
buffer_ssch <- st_buffer(sf_resale_flat, 0)
buffer_cc <- st_buffer(sf_resale_flat, 0)
buffer_supermarket <- st_buffer(sf_resale_flat, 0)
buffer_sport <- st_buffer(sf_resale_flat, 0)
buffer_preschool <- st_buffer(sf_resale_flat, 0)
buffer_hawker <- st_buffer(sf_resale_flat, 0)
buffer_mall <- st_buffer(sf_resale_flat, 0)
sf_resale_flat <- sf_resale_flat %>%
mutate(mrt_count = lengths(st_intersects(buffer_mrt, mrt)))%>%
mutate(pri_school_count = lengths(st_intersects(buffer_psch, sf_pschool)))%>%
mutate(sec_school_count = lengths(st_intersects(buffer_ssch, sf_sschool)))%>%
mutate(community_center_count = lengths(st_intersects(buffer_cc, sf_cc)))%>%
mutate(supermarket_count = lengths(st_intersects(buffer_supermarket, sf_supermarket)))%>%
mutate(sport_count = lengths(st_intersects(buffer_sport, sf_sport_facilities)))%>%
mutate(preschool_count = lengths(st_intersects(buffer_preschool, sf_preschool)))%>%
mutate(hawker_count = lengths(st_intersects(buffer_hawker, sf_hawkercenter)))%>%
mutate(mall_count = lengths(st_intersects(buffer_mall, sf_mall)))
buffer_mrt <- st_buffer(sf_resale_flat, 0)
buffer_psch <- st_buffer(sf_resale_flat, 0)
buffer_ssch <- st_buffer(sf_resale_flat, 0)
buffer_cc <- st_buffer(sf_resale_flat, 0)
buffer_supermarket <- st_buffer(sf_resale_flat, 0)
buffer_sport <- st_buffer(sf_resale_flat, 0)
buffer_preschool <- st_buffer(sf_resale_flat, 0)
buffer_hawker <- st_buffer(sf_resale_flat, 0)
buffer_mall <- st_buffer(sf_resale_flat, 0)
sf_resale_flat <- sf_resale_flat %>%
mutate(mrt_count = lengths(st_intersects(buffer_mrt, mrt)))%>%
mutate(pri_school_count = lengths(st_intersects(buffer_psch, sf_pschool)))%>%
mutate(sec_school_count = lengths(st_intersects(buffer_ssch, sf_sschool)))%>%
mutate(community_center_count = lengths(st_intersects(buffer_cc, sf_cc)))%>%
mutate(supermarket_count = lengths(st_intersects(buffer_supermarket, sf_supermarket)))%>%
mutate(sport_count = lengths(st_intersects(buffer_sport, sf_sport_facilities)))%>%
mutate(preschool_count = lengths(st_intersects(buffer_preschool, sf_preschool)))%>%
mutate(hawker_count = lengths(st_intersects(buffer_hawker, sf_hawkercenter)))%>%
mutate(mall_count = lengths(st_intersects(buffer_mall, sf_mall)))
sf_resale_flat <- sf_resale_flat%>%
mutate(`resale_price`= as.numeric(`resale_price`))
ggplot(data = sf_resale_flat, aes(x=`resale_price`)) +
geom_histogram(bins=20, color="black", fill="light blue")
sf_resale_flat <- sf_resale_flat %>%
mutate(`log_resale_price` = log(`resale_price`))
ggplot(data = sf_resale_flat, aes(x=`log_resale_price`)) +
geom_histogram(bins=20, color="black", fill="light blue")
#NEED TO DO SAMPLING HERE
testtest <- as_Spatial(sf_resale_flat)
testtest <- testtest[sample(1:length(testtest),300),]
sf_resale_flat <- st_as_sf(testtest)
#Building a hedonic pricing model using multiple linear regression method
#resale_flat.mlr <- lm(formula = resale_price ~ remaining_lease_nearest_year + flat_type_code + mrt_count + pri_school_count + sec_school_count + community_center_count + supermarket_count + sport_count + preschool_count + hawker_count + mall_count, data=sf_resale_flat)
resale_flat.mlr <- lm(formula = resale_price ~ flat_type_code + mrt_count + pri_school_count + sec_school_count + community_center_count + supermarket_count + sport_count + preschool_count + hawker_count + mall_count, data=sf_resale_flat)
summary(resale_flat.mlr)
# remove sport count
#sf_resale_flat <- sf_resale_flat[-c(4540,9963), ]
resale_flat.mlr1 <- lm(formula = resale_price ~ flat_type_code + mrt_count + pri_school_count + sec_school_count + community_center_count + supermarket_count + sport_count + preschool_count + hawker_count + mall_count, data=sf_resale_flat)
ols_regress(resale_flat.mlr1)
sp_resale_flat <- as_Spatial(sf_resale_flat.res)
#sp_resale_flat <- sp_resale_flat[-c(4540,9963), ]
#Sampling done here
#sp_resale_flat <- sp_resale_flat[sample(1:length(sp_resale_flat),300),]
sp_resale_flat
bw.fixed <- bw.gwr(formula = resale_price ~ flat_type_code + mrt_count + pri_school_count + sec_school_count + community_center_count + supermarket_count + preschool_count + hawker_count + mall_count, data=sp_resale_flat, approach="CV", kernel="gaussian", adaptive=FALSE, longlat=FALSE)
#bw.adaptive <- bw.gwr(formula = resale_price ~ floor_area_sqm + mrt_count + pri_school_count + sec_school_count + community_center_count + supermarket_count +preschool_count + hawker_count + mall_count, data = sp_resale_flat, approach="CV", kernel="gaussian", adaptive=TRUE, longlat=FALSE)
set.seed(0)
gwr.fixed <- gwr.basic(formula = resale_price ~ flat_type_code + mrt_count + pri_school_count + sec_school_count + community_center_count + supermarket_count + preschool_count + hawker_count + mall_count, data = sp_resale_flat, bw=bw.fixed, kernel = 'gaussian', longlat = FALSE)
runApp('Spatial')
runApp('Spatial')
runApp('Spatial')
